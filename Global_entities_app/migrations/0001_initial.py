# Generated by Django 5.1.6 on 2025-02-25 02:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Citys_app', '0001_initial'),
        ('Village_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CulturalInformation',
            fields=[
                ('cultural_information_id', models.AutoField(primary_key=True, serialize=False)),
                ('City_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.city')),
                ('District_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.district')),
                ('Division_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.division')),
                ('provinces_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.province')),
                ('village_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Village_app.village')),
            ],
        ),
        migrations.CreateModel(
            name='Economy',
            fields=[
                ('economy_id', models.AutoField(primary_key=True, serialize=False)),
                ('City_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.city')),
                ('District_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.district')),
                ('Division_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.division')),
                ('provinces_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.province')),
                ('village_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Village_app.village')),
            ],
        ),
        migrations.CreateModel(
            name='Farming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major_crops', models.TextField()),
                ('fruit_cultivation', models.TextField()),
                ('live_stock', models.TextField()),
                ('methods_used', models.TextField()),
                ('economy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Farming', to='Global_entities_app.economy')),
            ],
        ),
        migrations.CreateModel(
            name='GeographicalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographical_information_code', models.CharField(max_length=50, unique=True)),
                ('City_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.city')),
                ('District_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.district')),
                ('Division_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.division')),
                ('provinces_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.province')),
                ('village_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Village_app.village')),
            ],
        ),
        migrations.CreateModel(
            name='GeoArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_area', models.FloatField()),
                ('topography', models.TextField()),
                ('land_use', models.TextField()),
                ('geographical_information_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geo_area', to='Global_entities_app.geographicalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='ClimateDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_temperature', models.FloatField()),
                ('rainfall', models.FloatField()),
                ('seasonal_variations', models.TextField()),
                ('geographical_information_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='climate_detail', to='Global_entities_app.geographicalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Handicrafts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('popular_crafts', models.TextField()),
                ('specialty_items', models.TextField()),
                ('community_involvement', models.TextField()),
                ('economy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Handicrafts', to='Global_entities_app.economy')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalBackground',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('founding_year', models.IntegerField()),
                ('founders', models.TextField()),
                ('historical_events', models.TextField()),
                ('cultural_significance', models.TextField()),
                ('monuments_or_landmarks', models.TextField()),
                ('ethnic_background', models.TextField()),
                ('famous_persons', models.TextField()),
                ('historic_sites_nearby', models.TextField()),
                ('development_over_time', models.TextField()),
                ('City_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.city')),
                ('District_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.district')),
                ('Division_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.division')),
                ('provinces_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.province')),
                ('village_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Village_app.village')),
            ],
        ),
        migrations.CreateModel(
            name='Industries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_factories', models.TextField()),
                ('raw_material_sources', models.TextField()),
                ('employment_contribution', models.TextField()),
                ('economic_impact', models.TextField()),
                ('economy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Industries', to='Global_entities_app.economy')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageSpoken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_language', models.CharField(max_length=100)),
                ('secondary_language', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_languages', models.TextField(blank=True, null=True)),
                ('cultural_information_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages_spoken', to='Global_entities_app.culturalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='LocalFestival',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spring_festival', models.CharField(blank=True, max_length=255, null=True)),
                ('harvest_festival', models.CharField(blank=True, max_length=255, null=True)),
                ('eid_celebrations', models.CharField(blank=True, max_length=255, null=True)),
                ('cultural_information_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='local_festival', to='Global_entities_app.culturalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='LocationInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', models.CharField(max_length=255)),
                ('nearest_landmark', models.CharField(max_length=255)),
                ('distance_from_major_city', models.FloatField()),
                ('geographical_information_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_information', to='Global_entities_app.geographicalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='PopulationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('population_code', models.CharField(max_length=50, unique=True)),
                ('City_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.city')),
                ('District_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.district')),
                ('Division_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.division')),
                ('provinces_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Citys_app.province')),
                ('village_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Village_app.village')),
            ],
        ),
        migrations.CreateModel(
            name='PopulationChildren',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField()),
                ('age_range', models.CharField(max_length=50)),
                ('percentage_of_total_population', models.FloatField()),
                ('population_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children_population', to='Global_entities_app.populationdetail')),
            ],
        ),
        migrations.CreateModel(
            name='PopulationAdult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField()),
                ('age_range', models.CharField(max_length=50)),
                ('percentage_of_total_population', models.FloatField()),
                ('population_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adult_population', to='Global_entities_app.populationdetail')),
            ],
        ),
        migrations.CreateModel(
            name='GenderRatio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('male', models.IntegerField()),
                ('female', models.IntegerField()),
                ('male_to_female_ratio', models.FloatField()),
                ('population_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gender_ratio', to='Global_entities_app.populationdetail')),
            ],
        ),
        migrations.CreateModel(
            name='PopulationElderly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField()),
                ('age_range', models.CharField(max_length=50)),
                ('percentage_of_total_population', models.FloatField()),
                ('population_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elderly_population', to='Global_entities_app.populationdetail')),
            ],
        ),
        migrations.CreateModel(
            name='PopulationLiteracyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_literacy_rate', models.FloatField()),
                ('male_literacy_rate', models.FloatField()),
                ('female_literacy_rate', models.FloatField()),
                ('population_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='literacy_rate', to='Global_entities_app.populationdetail')),
            ],
        ),
        migrations.CreateModel(
            name='Traditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('traditional_dress', models.CharField(blank=True, max_length=255, null=True)),
                ('hospitality', models.TextField(blank=True, null=True)),
                ('storytelling_evenings', models.TextField(blank=True, null=True)),
                ('wedding_ceremonies', models.TextField(blank=True, null=True)),
                ('cultural_information_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traditions', to='Global_entities_app.culturalinformation')),
            ],
        ),
    ]
